#===================eureka=====================
#是否注册到eureka
eureka.client.registerWithEureka=true
##是否从eureka中拉取注册信息
eureka.client.fetchRegistry=true
eureka.client.serviceUrl.defaultZone=http://admin:admin@localhost:8763/eureka/
##连接集群
##eureka.client.serviceUrl.defaultZone=http://admin:admin@Eureka8761.com:8761/eureka/,http://admin:admin@Eureka8762.com:8762/eureka/
##服务续约，心跳的时间间隔  单位 s
eureka.instance.lease-renewal-interval-in-seconds=30
#如果从前一次发送心跳时间起，90秒没接受到新的心跳，讲剔除服务
eureka.instance.lease-expiration-duration-in-seconds=90
#表示eureka client间隔多久去拉取服务注册信息，默认为30秒
eureka.client.registry-fetch-interval-seconds=30
#健康检测
eureka.client.healthcheck.enabled=true
# =====================================================开启 hystrix.stream 端点============================================
#  开启 hystrix.stream 端点  所有端点暴露     http://localhost:8081/actuator/hystrix.stream
management.endpoints.web.exposure.include=*



#==============================================================feign==========================
#feign开启熔断器
feign.hystrix.enabled=true
#开启feign的压缩功能  配置请求GZIP压缩。
feign.compression.request.enabled=true
#配置响应GZIP压缩。
feign.compression.response.enabled=true
#配置压缩支持的MIME TYPE
#feign.compression.request.mime-types=text/xml,application/xml,application/json
#配置压缩数据大小的下限
#feign.compression.request.min-request-size=2048


#全局超时时间
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=5000
#hystrix.command.default.metrics.rollingStats.timeInMilliseconds=4000
#hystrix.command.default.metrics.healthSnapshot.intervalInMilliseconds=2000

#单个方法超时配置
#hystrix.command.<commandKey>作为前缀,默认是采用Feign的客户端的方法名字作为标识
hystrix.command.getAllStudent.execution.isolation.thread.timeoutInMilliseconds=6000
hystrix.command.queryContents.circuitBreaker.sleepWindowInMilliseconds=20000


# ================================config配置==========================================
spring.cloud.config.profile=dev
spring.cloud.config.label=master
#这种配置是configserver还单机情况，直接连接这个单机服务就行
spring.cloud.config.uri=http://localhost:8882/
#configserver高可用配置
#开启configserver服务发现功能
#spring.cloud.config.discovery.enabled=true
##服务发现的服务名称
#spring.cloud.config.discovery.service-id=config-server
#
##如果连接不上获取配置有问题，快速响应失败
#spring.cloud.config.fail-fast=true
##默认重试的间隔时间，默认1000ms
#spring.cloud.config.retry.multiplier=1000
##下一间隔时间的乘数，默认是1.1
##spring.cloud.config.retry.initial-interval=1.1
##最大间隔时间，最大2000ms
#spring.cloud.config.retry.max-interval=2000
##最大重试次数，默认6次
#spring.cloud.config.retry.max-attempts=6
#
#
#spring.rabbitmq.host=192.168.67.139
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=admin
#spring.rabbitmq.password=admin
#
## 刷新配置url  http://localhost:8081/actuator/bus-refresh
#spring.cloud.bus.refresh.enabled=true
#spring.cloud.bus.trace.enabled=true